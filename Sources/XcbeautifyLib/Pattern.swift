typealias Pattern = String

extension Pattern {
    static let analyze: Pattern = AnalyzeCaptureGroup.pattern
    static let buildTarget: Pattern = BuildTargetCaptureGroup.pattern
    static let aggregateTarget: Pattern = AggregateTargetCaptureGroup.pattern
    static let analyzeTarget: Pattern = AnalyzeTargetCaptureGroup.pattern
    static let checkDependencies: Pattern = CheckDependenciesCaptureGroup.pattern
    static let shellCommand: Pattern = ShellCommandCaptureGroup.pattern
    static let cleanRemove: Pattern = CleanRemoveCaptureGroup.pattern
    static let cleanTarget: Pattern = CleanTargetCaptureGroup.pattern
    static let codesign: Pattern = CodesignCaptureGroup.pattern
    static let codesignFramework: Pattern = CodesignFrameworkCaptureGroup.pattern
    static let compile: Pattern = CompileCaptureGroup.pattern
    static let compileCommand: Pattern = CompileCommandCaptureGroup.pattern
    static let compileXib: Pattern = CompileXibCaptureGroup.pattern
    static let compileStoryboard: Pattern = CompileStoryboardCaptureGroup.pattern
    static let copyHeader: Pattern = CopyHeaderCaptureGroup.pattern
    static let copyPlist: Pattern = CopyPlistCaptureGroup.pattern
    static let copyStrings: Pattern = CopyStringsCaptureGroup.pattern
    static let cpresource: Pattern = CpresourceCaptureGroup.pattern
    static let executedWithoutSkipped: Pattern = ExecutedWithoutSkippedCaptureGroup.pattern
    static let executedWithSkipped: Pattern = ExecutedWithSkippedCaptureGroup.pattern
    static let failingTest: Pattern = FailingTestCaptureGroup.pattern
    static let uiFailingTest: Pattern = UIFailingTestCaptureGroup.pattern
    static let restartingTest: Pattern = RestartingTestCaptureGroup.pattern
    static let generateCoverageData: Pattern = GenerateCoverageDataCaptureGroup.pattern
    static let generatedCoverageReport: Pattern = GeneratedCoverageReportCaptureGroup.pattern
    static let generateDsym: Pattern = GenerateDSYMCaptureGroup.pattern
    static let libtool: Pattern = LibtoolCaptureGroup.pattern
    static let linking: Pattern = LinkingCaptureGroup.pattern
    static let testCasePassed: Pattern = TestCasePassedCaptureGroup.pattern
    static let testCaseStarted: Pattern = TestCaseStartedCaptureGroup.pattern
    static let testCasePending: Pattern = TestCasePendingCaptureGroup.pattern
    static let testCaseMeasured: Pattern = TestCaseMeasuredCaptureGroup.pattern
    static let parallelTestCasePassed: Pattern = ParallelTestCasePassedCaptureGroup.pattern
    static let parallelTestCaseAppKitPassed: Pattern = ParallelTestCaseAppKitPassedCaptureGroup.pattern
    static let parallelTestCaseFailed: Pattern = ParallelTestCaseFailedCaptureGroup.pattern
    static let parallelTestingStarted: Pattern = ParallelTestingStartedCaptureGroup.pattern
    static let parallelTestingPassed: Pattern = ParallelTestingPassedCaptureGroup.pattern
    static let parallelTestingFailed: Pattern = ParallelTestingFailedCaptureGroup.pattern
    static let parallelTestSuiteStarted: Pattern = ParallelTestSuiteStartedCaptureGroup.pattern
    static let phaseSuccess: Pattern = PhaseSuccessCaptureGroup.pattern
    static let phaseScriptExecution: Pattern = PhaseScriptExecutionCaptureGroup.pattern
    static let processPch: Pattern = ProcessPchCaptureGroup.pattern
    static let processPchCommand: Pattern = ProcessPchCommandCaptureGroup.pattern
    static let preprocess: Pattern = PreprocessCaptureGroup.pattern
    static let pbxcp: Pattern = PbxcpCaptureGroup.pattern
    static let processInfoPlist: Pattern = ProcessInfoPlistCaptureGroup.pattern
    static let testsRunCompletion: Pattern = TestsRunCompletionCaptureGroup.pattern
    static let testSuiteStarted: Pattern = TestSuiteStartedCaptureGroup.pattern
    static let testSuiteStart: Pattern = TestSuiteStartCaptureGroup.pattern
    static let testSuiteAllTestsPassed: Pattern = TestSuiteAllTestsPassedCaptureGroup.pattern
    static let testSuiteAllTestsFailed: Pattern = TestSuiteAllTestsFailedCaptureGroup.pattern
    static let tiffutil: Pattern = TIFFutilCaptureGroup.pattern
    static let touch: Pattern = TouchCaptureGroup.pattern
    static let writeFile: Pattern = WriteFileCaptureGroup.pattern
    static let writeAuxiliaryFiles: Pattern = WriteAuxiliaryFilesCaptureGroup.pattern
    static let compileWarning: Pattern = CompileWarningCaptureGroup.pattern
    static let ldWarning: Pattern = LDWarningCaptureGroup.pattern
    static let genericWarning: Pattern = GenericWarningCaptureGroup.pattern
    static let willNotBeCodeSigned: Pattern = WillNotBeCodeSignedCaptureGroup.pattern
    static let duplicateLocalizedStringKey: Pattern = DuplicateLocalizedStringKeyCaptureGroup.pattern
    static let clangError: Pattern = ClangErrorCaptureGroup.pattern
    static let checkDependenciesErrors: Pattern = CheckDependenciesCaptureGroup.pattern
    static let provisioningProfileRequired: Pattern = ProvisioningProfileRequiredCaptureGroup.pattern
    static let noCertificate: Pattern = NoCertificateCaptureGroup.pattern
    static let compileError: Pattern = CompileErrorCaptureGroup.pattern
    static let cursor: Pattern = CursorCaptureGroup.pattern
    static let fatalError: Pattern = FatalErrorCaptureGroup.pattern
    static let fileMissingError: Pattern = FileMissingErrorCaptureGroup.pattern
    static let ldError: Pattern = LDErrorCaptureGroup.pattern
    static let linkerDuplicateSymbolsLocation: Pattern = LinkerDuplicateSymbolsLocationCaptureGroup.pattern
    static let linkerDuplicateSymbols: Pattern = LinkerDuplicateSymbolsCaptureGroup.pattern
    static let linkerUndefinedSymbolLocation: Pattern = LinkerUndefinedSymbolLocationCaptureGroup.pattern
    static let linkerUndefinedSymbols: Pattern = LinkerUndefinedSymbolsCaptureGroup.pattern
    static let podsError: Pattern = PodsErrorCaptureGroup.pattern
    static let symbolReferencedFrom: Pattern = SymbolReferencedFromCaptureGroup.pattern
    static let moduleIncludesError: Pattern = ModuleIncludesErrorCaptureGroup.pattern
    static let undefinedSymbolLocation: Pattern = UndefinedSymbolLocationCaptureGroup.pattern
    static let packageFetching: Pattern = PackageFetchingCaptureGroup.pattern
    static let packageUpdating: Pattern = PackageUpdatingCaptureGroup.pattern
    static let packageCheckingOut: Pattern = PackageCheckingOutCaptureGroup.pattern
    static let packageGraphResolvingStart: Pattern = PackageGraphResolvingStartCaptureGroup.pattern
    static let packageGraphResolvingEnded: Pattern = PackageGraphResolvingEndedCaptureGroup.pattern
    static let packageGraphResolvedItem: Pattern = PackageGraphResolvedItemCaptureGroup.pattern
    static let xcodebuildError: Pattern = XcodebuildErrorCaptureGroup.pattern
}
