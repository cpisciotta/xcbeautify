on:
  push:
    tags:
      - '*'
name: Release

env:
  SWIFT_VERSION: 5.7

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - id: get_version
        uses: battila7/get-version-action@v2
  macos:
    name: Release macOS
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      - name: Build & Package
        run: make package
      - name: Darwin Universal
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: .build/apple/Products/Release/xcbeautify.zip
          asset_name: xcbeautify-${{ needs.create_release.outputs.tag_name }}-universal-apple-macosx.zip
          asset_content_type: application/zip
      - name: Darwin x86_64
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: .build/x86_64-apple-macosx/release/xcbeautify.zip
          asset_name: xcbeautify-${{ needs.create_release.outputs.tag_name }}-x86_64-apple-macosx.zip
          asset_content_type: application/zip
      - name: Darwin arm64
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: .build/arm64-apple-macosx/release/xcbeautify.zip
          asset_name: xcbeautify-${{ needs.create_release.outputs.tag_name }}-arm64-apple-macosx.zip
          asset_content_type: application/zip

  ubuntu_x86_64:
    name: Release Linux x86_64
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      - name: Package Linux x86_64
        run: make package-linux-x86_64
      - name: Upload Release Asset for Linux x86_64
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: xcbeautify.tar.xz
          asset_name: xcbeautify-${{ needs.create_release.outputs.tag_name }}-x86_64-unknown-linux-gnu.tar.xz
          asset_content_type: application/x-xz
#  ubuntu_arm64:
#    name: Release Linux arm64
#    runs-on: ubuntu-latest
#    needs: create_release
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Package Linux arm64
#        uses: uraimo/run-on-arch-action@v2.0.5
#        with:
#          arch: aarch64
#          distro: ubuntu20.04
#          githubToken: ${{ github.token }}
#          run: |
#            apt update -yq
#            apt install -y make
#            make package-linux-arm64
#      - name: Upload Release Asset for Linux arm64
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.create_release.outputs.upload_url }}
#          asset_path: xcbeautify.tar.xz
#          asset_name: xcbeautify-${{ needs.create_release.outputs.tag_name }}-aarch64-unknown-linux-gnu.tar.xz
#          asset_content_type: application/x-xz
